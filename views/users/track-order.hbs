{{>head-user}}
{{>user-header}}
{{!--
<link rel="stylesheet"
	href="https://maxst.icons8.com/vue-static/landings/line-awesome/line-awesome/1.3.0/css/line-awesome.min.css"> --}}
<link rel="stylesheet" href="/css/main.css">
<section>
	<div class="container" style="height: 80vh;overflow: hidden;">
		{{#if order.pickupDate}}
		<div class="row">
			<h4 class="text-center text-success mt-4">Your return request has been approved by the admin please ready
				the item for return </h4>
			<p class="text-center mt-2">Expected pickup date: {{order.pickupDate}}</p>
		</div>
		{{/if}}
		{{#if (eq order.returnStatus 'declined')}}
		<div class="row">
			<h4 class="text-center text-danger mt-4">Your return request has been declined by the admin please contact
				us. </h4>
			<p class="text-center mt-2">Reason:........</p>
		</div>
		{{/if}}
		{{#if (eq order.returnStatus 'pending')}}
		<div class="row">
			<h4 class="text-center text-dark mt-4">Your return request has been submitted please wait for the
				response..!</h4>
			<p class="text-center mt-2">Expected pickup date will be updating soon</p>
		</div>
		{{/if}}
		<div class="row d-flex align-items-center justify-content-center" style="">
			<div class="status-box " style="">

				<ul class="list-unstyled" id="status-list">
					<li class="status_line" style="font-size: 22px;" data-status="placed"><span>Order Placed</span>
						{{statusDates.placed}}</li>
					<li class="status_line status-li" data-status="confirmed"><span>Order Confirmed</span>
						{{statusDates.confirmed}}</li>
					<li class="status_line status-li" data-status="shipped"><span>Shipped</span>
						{{statusDates.shipped}}
					</li>
					<li class="status_line status-li " data-status="delivery"><span>Out for delivery
							{{statusDates.delivery}}</span></li>
					<li class="status_line status-li" data-status="completed"><span>Completed</span>
						{{statusDates.completed}}</li>
					<input type="hidden" value="{{order.status}}">
				</ul>
			</div>
		</div>
		<div class="pt-10 mt-25 d-flex " style="margin-left: 14em; border-radius: 4px;margin-bottom: 100px;">
            <button class="btn-help ms-1">Need Help</button>
            {{#if (eq order.status 'cancelled')}}
				{{else}}
				{{#if (eq order.status 'completed')}}
				{{else}}
				<button class="btn-cancel me-1 ms-2" onclick="setOrderCancellData('{{order._id}}')" id="cancelBtn"
				data-bs-toggle="modal" data-bs-target="#cancelModal">Cancel</button>
				{{/if}}
			{{/if}}
			{{#if (eq order.status 'completed')}}
			{{#if order.returnStatus}}

			{{else}}
			<button style="margin-left: 5px;" class="btn-cancel" onclick="showOrderReturnModal('{{order._id}}',event)"
			class="btn btn-danger btn-sm " >Return</button>
			{{/if}}
			{{/if}}

		</div>
	</div>


	<div class="modal fade" id="cancelModal" tabindex="-1" aria-labelledby="cancelModalLabel" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered">
			<div class="modal-content bg-danger">
				<div class="modal-header border-0">
					<button type="button" class="btn-close text-white" data-bs-dismiss="modal"
						aria-label="Close"></button>
				</div>
				<div class="modal-body text-center p-4">
					<i class="fas fa-exclamation-circle fa-4x text-white mb-3"></i>
					<h5 class="modal-title text-white mb-3" id="cancelModalLabel">Cancel Order</h5>
					<form id="cancelForm">
						<div class="mb-3">
							<label for="reason" class="form-label text-white">Reason for cancellation:</label>
							<select class="form-select" id="return-reason" name="reason">
								<option value="" selected disabled>Select a reason</option>
								<option value="not available">Item not available</option>
								<option value="wrong item">Wrong item ordered</option>
								<option value="delayed delivery">Delivery delayed</option>
								<option value="others">Other</option>
							</select>
						</div>
						<div class="mb-3" id="otherReasonContainer" style="display:none;">
							<label for="otherReason" class="form-label text-white">Other reason:</label>
							<textarea class="form-control" id="otherReason" name="otherReason"></textarea>
						</div>
						<button type="button" class="btn btn-sm btn-link text-white"
							data-bs-dismiss="modal">Close</button>
						<button type="submit" class="btn btn-sm btn-light px-3 py-2 me-2"
							onclick="cancellOrderModal()">Submit</button>
						<input type="hidden" id="orderId" value="">
					</form>
				</div>
			</div>
		</div>
	</div>


	{{!-- Modal for returning the product --}}
	<div class="modal fade" id="returnModal" tabindex="-1" aria-labelledby="returnModalLabel" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered">
			<div class="modal-content bg-danger">
				<div class="modal-header border-0">
					<button type="button" class="btn-close text-white" data-bs-dismiss="modal"
						aria-label="Close"></button>
				</div>
				<div class="modal-body text-center p-4">
					<i class="fas fa-exclamation-circle fa-4x text-white mb-3"></i>
					<h5 class="modal-title text-white mb-3" id="returnModalLabel">Return Order</h5>
						<div class="mb-3">
							<label for="reason" class="form-label text-white">Reason for return:</label>
							<select class="form-select" id="return-reason-track" name="reason">
								<option value="no reason" selected disabled>Select a reason</option>
								<option value="defective item">Defective item</option>
								<option value="wrong item">Wrong item received</option>
								<option value="damaged item">Item arrived damaged</option>
								<option value="others">Other</option>
							</select>
						</div>
						<div class="mb-3" id="otherReasonContainer" style="display:none;">
							<label for="otherReason" class="form-label text-white">Other reason:</label>
							<textarea class="form-control"  id="otherReason" name="otherReason"></textarea>
						</div>
						<button type="button" class="btn btn-sm btn-link text-white"
							data-bs-dismiss="modal">Close</button>
						<button type="button" class="btn btn-sm btn-light px-3 py-2 me-2"
							onclick="returnOrder()">Submit</button>
						<input type="hidden" id="orderId" value="">
				</div>
			</div>
		</div>
	</div>

</section>
{{>foot-user}}
<script>

	 const showOrderReturnModal = (orderId, event) => {
        event.preventDefault()
        $('#orderId').val(orderId);
        $('#returnModal').modal('show');
    }
    const returnOrder = () => {
        const orderId = $('#orderId').val();
        const reason = $('#return-reason-track').val()
        $.ajax({
            url: '/return-products',
            type: 'POST',
            data: {
                orderId,
                reason
            },
            success: (response) => {
                $('#returnModal').modal('hide');
                if (response.status) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: 'Your return request has been successfully submitted.',
                        showConfirmButton: false,
                        timer: 2000
                    });
					setTimeout(() =>{
                     location.reload()
					},3000)
                   
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: 'Failed to submit return request. Please try again later.',
                        showConfirmButton: false,
                        timer: 2000
                    });
                }
            },
            error: (error) => {
                $('#returnModal').modal('hide');
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: 'Failed to submit return request. Please try again later.',
                    showConfirmButton: false,
                    timer: 2000
                });
            }
        })
    }


	const statusLines = document.querySelectorAll("#status-list .status_line");

	function updateStatusColors(currentStatusIndex) {
		for (let i = 0; i < statusLines.length; i++) {
			if (i < currentStatusIndex) {
				statusLines[i].style.color = "green";
			} else if (i === currentStatusIndex) {
				statusLines[i].style.color = "orange";
			} else {
				statusLines[i].style.color = "#ccc";
			}
		}
	}

	const orderStatus = document.querySelector("input[type=hidden]").value;
	let currentStatusIndex = -1;
	for (let i = 0; i < statusLines.length; i++) {
		if (statusLines[i].getAttribute("data-status") === orderStatus) {
			currentStatusIndex = i;
			break;
		}
	}
	updateStatusColors(currentStatusIndex);

	let index = 0;
	const interval = setInterval(function () {
		if (index > currentStatusIndex) {
			clearInterval(interval);
			return;
		}
		updateStatusColors(index);

		index++;
	}, 200);

</script>