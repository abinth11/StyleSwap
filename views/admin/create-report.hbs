{{>admin-head-html}}
<div class="screen-overlay"></div>
{{>admin-navbar}}
<main class="main-wrap">
    {{>admin-header}}
    <section class="content-main">
        <div class="content-header">
            <div>
                <h2 class="content-title card-title">Create Report</h2>
                <p>You can filter report by selecting date</p>
            </div>
            <div>
                <button class="btn btn-primary" id="generate-report-button"><i
                        class="text-muted material-icons md-post_add"></i>Create
                    report</button>
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-lg-12">
                        <header class="border-bottom mb-3 pb-3">
                            <form id="filter-report">
                                <div class="row ">
                                    <div class="col-lg-3 col-4  d-flex">
                                        <label for="from-date" class="mt-2">From:</label>
                                        <input type="date" name="from" id="from-date" class="ms-2 form-control"
                                            required>
                                    </div>
                                    <div class="col-lg-3 col-4 ms-3 d-flex">
                                        <label for="to-date" class="mt-2">To:</label>
                                        <input type="date" name="to" id="to-date" class=" ms-2 form-control" disabled
                                            required>
                                    </div>
                                    <div class="col-lg-3 col-4 ms-3">
                                        <button type="submit" class="btn text-white"
                                            style="background-color: #046963;">Filter</button>
                                    </div>


                                </div>
                            </form>

                        </header> <!-- card-header end// -->
                          <div class="row  " style="padding-top:15px;">
                            <h4> Complete Sales Overiview</h4>
                        </div>
                        <div class="table-responsive mt-3">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>No</th>
                                        <th>Title</th>
                                        <th>Value</th>
                                        <th> Action </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <input type="hidden" name="from" id="from" value="">
                                        <input type="hidden" name="from" id="to" value="">
                                        <td><b>1</b></td>
                                        <td>Total Revenue</td>
                                        <td id="total-revenue">
                                            {{ formatCurrency response.totalRevenue.value}}
                                        </td>
                                        <td>
                                            <a href="#" class="btn btn-sm btn-light font-sm rounded">Details</a>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td><b>2</b></td>
                                        <td>Average Order Value</td>
                                        <td id="avereage-order-value">
                                            {{ formatCurrency response.averageOrderValue.value}}
                                        </td>
                                        <td>
                                            <a href="#" class="btn btn-sm btn-light font-sm rounded">Details</a>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td><b>3</b></td>
                                        <td>Monthly Eearnings</td>
                                        <td id="monthly-earnings">
                                            {{ formatCurrency response.monthlyEarnings.value}}
                                        </td>
                                        <td>
                                            <a href="#" class="btn btn-sm btn-light font-sm rounded">Details</a>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td><b>4</b></td>
                                        <td>Total orders</td>
                                        <td id="total-orders">
                                            {{response.totalOrders.value}}
                                        </td>
                                        <td>
                                            <a href="#" class="btn btn-sm btn-light font-sm rounded">Details</a>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td><b>5</b></td>
                                        <td>Number of products availabe</td>
                                        <td id="number-of-products">
                                            {{response.totalProducts.value}}
                                        </td>
                                        <td>
                                            <a href="#" class="btn btn-sm btn-light font-sm rounded">Details</a>
                                        </td>
                                    </tr>


                                </tbody>
                            </table>
                        </div> <!-- table-responsive.// -->
                        <div class="row  " style="padding-top:60px;">
                            <h4>Most selling Products</h4>
                        </div>
                        <div class="table-responsive mt-4">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>No</th>
                                        <th>Name</th>
                                        <th>Price</th>
                                        <th> Sold </th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {{#each response.mostSold.value}}
                                    <tr>
                                        <input type="hidden" name="from" id="from" value="">
                                        <input type="hidden" name="from" id="to" value="">
                                        <td><b>{{inc @index}}</b></td>
                                        <td id="product_name">{{name}}</td>
                                        <td id="product_size">{{formatCurrency price}}
                                        </td>
                                        <td id="sold-count">{{sold}}</td>
                                        <td>
                                            <a href="#" class="btn btn-sm btn-light font-sm rounded">Details</a>
                                        </td>
                                    </tr>
                                    {{/each}}


                                </tbody>
                            </table>
                        </div> <!-- table-responsive.// -->

                        <div class="row  " style="padding-top:60px;">
                            <h4>Sales Based on Month</h4>
                        </div>
                        <div class="col-md-6">
                            <div class="table-responsive mt-4">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Month</th>
                                            <th>Revenue</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>January</td>
                                            <td>₹{{response.monthlySales.[0]}}</td>
                                        </tr>
                                        <tr>
                                            <td>February</td>
                                            <td>₹{{response.monthlySales.[1]}}</td>
                                        </tr>
                                        <tr>
                                            <td>March</td>
                                            <td>₹{{response.monthlySales.[2]}}</td>
                                        </tr>
                                        <tr>
                                            <td>April</td>
                                            <td>₹{{response.monthlySales.[3]}}</td>
                                        </tr>
                                        <tr>
                                            <td>May</td>
                                            <td>₹{{response.monthlySales.[4]}}</td>
                                        </tr>
                                        <tr>
                                            <td>June</td>
                                            <td>₹{{response.monthlySales.[5]}}</td>
                                        </tr>
                                        <tr>
                                            <td>July</td>
                                            <td>₹{{response.monthlySales.[6]}}</td>
                                        </tr>
                                        <tr>
                                            <td>August</td>
                                            <td>₹{{response.monthlySales.[7]}}</td>
                                        </tr>
                                        <tr>
                                            <td>September</td>
                                            <td>₹{{response.monthlySales.[8]}}</td>
                                        </tr>
                                        <tr>
                                            <td>October</td>
                                            <td>₹{{response.monthlySales.[9]}}</td>
                                        </tr>
                                        <tr>
                                            <td>November</td>
                                            <td>₹{{response.monthlySales.[10]}}</td>
                                        </tr>
                                        <tr>
                                            <td>December</td>
                                            <td>₹{{response.monthlySales.[11]}}</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div> <!-- table-responsive.// -->

                        </div>


                    </div> <!-- col end// -->

                </div> <!-- row end// -->
            </div> <!-- card-body // -->
        </div> <!-- card end// -->
        <div class="pagination-area mt-30 mb-50">
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-start">
                    <li class="page-item active"><a class="page-link" href="#">01</a></li>
                    <li class="page-item"><a class="page-link" href="#">02</a></li>
                    <li class="page-item"><a class="page-link" href="#">03</a></li>
                    <li class="page-item"><a class="page-link dot" href="#">...</a></li>
                    <li class="page-item"><a class="page-link" href="#">16</a></li>
                    <li class="page-item"><a class="page-link" href="#"><i
                                class="material-icons md-chevron_right"></i></a></li>
                </ul>
            </nav>
        </div>
    </section>
    {{>admin-footer}}

    <script>
        const fromDateInput = document.getElementById('from-date');
        const toDateInput = document.getElementById('to-date');

        fromDateInput.addEventListener('change', () => {
            const fromDate = new Date(fromDateInput.value);
            toDateInput.min = fromDate.toISOString().split('T')[0];
            toDateInput.disabled = false;
        });



        function formatMoney(amount) {
            var formattedAmount = "\u20B9" + amount.toLocaleString("en-IN");
            if (formattedAmount.indexOf(".") == -1) {
                formattedAmount += ".00";
            }
            return formattedAmount;
        }

        function formatCurrency(amount) {
            // Convert the amount to a number if necessary
            amount = parseFloat(amount);

            // Use the toLocaleString() method to format the currency
            return amount.toLocaleString('en-US', {
                style: 'currency',
                currency: 'USD',
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            });
        }


        // Assuming that the AJAX response is in the form of an array of objects
        function displayData(response) {
            // Get a reference to the table body
            const tableBody = document.querySelector('tbody');

            // Clear the table body first
            tableBody.innerHTML = '';

            // Loop through the data array
            response.forEach((item, index) => {
                // Create a new table row
                const row = document.createElement('tr');

                // Set the row index
                const indexCell = document.createElement('td');
                indexCell.innerHTML = index + 1;
                row.appendChild(indexCell);

                // Set the product name
                const nameCell = document.createElement('td');
                nameCell.innerHTML = item.name;
                row.appendChild(nameCell);

                // Set the product price
                const priceCell = document.createElement('td');
                priceCell.innerHTML = formatCurrency(item.price);
                row.appendChild(priceCell);

                // Set the sold count
                const soldCell = document.createElement('td');
                soldCell.innerHTML = item.sold;
                row.appendChild(soldCell);

                // Add a details button
                const detailsCell = document.createElement('td');
                const detailsButton = document.createElement('a');
                detailsButton.href = '#';
                detailsButton.classList.add('btn', 'btn-sm', 'btn-light', 'font-sm', 'rounded');
                detailsButton.innerHTML = 'Details';
                detailsCell.appendChild(detailsButton);
                row.appendChild(detailsCell);

                // Append the table row to the table body
                tableBody.appendChild(row);
            });
        }



        $('#filter-report').submit((e) => {
            e.preventDefault()
            // Get the values of the from and to date inputs
            const fromDate = document.querySelector("#from-date").value;
            const toDate = document.querySelector("#to-date").value;

            // Create a Swal instance with the filter applied message
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: "btn btn-success me-2",
                    cancelButton: "btn btn-danger",
                },
                buttonsStyling: false,
            });

            swalWithBootstrapButtons.fire({
                icon: "success",
                title: "Filter applied!",
                text: `Filter applied from ${fromDate} to ${toDate}.`,
                confirmButtonText: "OK",
                confirmButtonColor: "#046963",
                cancelButtonText: "Cancel",
                showCancelButton: false,
                showCloseButton: true,
                reverseButtons: true,
            });
            $.ajax({
                url: '/admin/dashboard/filter-report',
                data: $('#filter-report').serialize(),
                type: 'POST',
                success: (response) => {
                    const totalRevenueTd = document.getElementById('total-revenue')
                    const averageOrderValueTd = document.getElementById('avereage-order-value')
                    const monthlyEarningsTd = document.getElementById('monthly-earnings')
                    const totalOrdersTd = document.getElementById('total-orders')
                    const numberOfProductsTd = document.getElementById('number-of-products')
                    const fromInput = document.getElementById('from').value = response.from
                    const toInput = document.getElementById('to').value = response.to
                    totalRevenueTd.innerHTML = formatMoney(response.totalRevenue)
                    averageOrderValueTd.innerHTML = formatMoney(response.averageOrderValue)
                    totalOrdersTd.innerHTML = response.totalOrders
                    monthlyEarningsTd.innerHTML = formatMoney(response.monthlyEarnings)
                    numberOfProductsTd.innerHTML = response.totalProducts




                }
            })
        })
    </script>

    <script>

        // Get a reference to the button that triggers the sales report generation
        const generateReportButton = document.getElementById('generate-report-button');

        // Add a click event listener to the button
        generateReportButton.addEventListener('click', () => {
            // Show a SweetAlert popup with options for PDF and Excel
            const swalDialog = Swal.fire({
                title: 'Select a file format',
                text: 'Please choose the format in which you want to generate the sales report',
                showCancelButton: true,
                confirmButtonText: '<i class="fas fa-file-pdf"></i> PDF',
                cancelButtonText: '<i class="fas fa-file-excel"></i> Excel',
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                reverseButtons: true,
                focusConfirm: true,
                focusCancel: false,
                icon: 'question',
                customClass: {
                    title: 'popup-title',
                    confirmButton: 'popup-confirm-button',
                    cancelButton: 'popup-cancel-button',
                    closeButton: 'popup-close-button'
                },
                showCloseButton: true,
                allowOutsideClick: false,
                allowEscapeKey: false
            });

            swalDialog.then((result) => {
                if (result.isConfirmed) {
                    generateSalesReport('pdf');
                } else if (result.dismiss === Swal.DismissReason.cancel) {
                    generateSalesReport('excel');
                } else if (result.dismiss === Swal.DismissReason.close) {
                    // Only close the dialog if the close button was clicked
                    Swal.close();
                }
            });
        });
        const swalClasses = {
            container: 'my-container-class',
            title: 'my-title-class',
            content: 'my-content-class',
            confirmButton: 'my-confirm-button-class',
            cancelButton: 'my-cancel-button-class'
        }
        // Define your custom CSS for the Swal dialog box
        const swalCustomCss = {
            container: 'my-container-class',
            title: 'my-title-class',
            content: 'my-content-class',
            confirmButton: 'my-confirm-button-class',
            cancelButton: 'my-cancel-button-class'
        }



        const generateSalesReport = (format) => {
            const totalRevenue = document.getElementById('total-revenue').textContent.trim()
            const averageOrderValue = document.getElementById('avereage-order-value').textContent.trim()
            const monthlyEarnings = document.getElementById('monthly-earnings').textContent.trim()
            const totalOrders = document.getElementById('total-orders').textContent.trim()
            const numberOfProducts = document.getElementById('number-of-products').textContent.trim()
            const from = document.getElementById('from').value
            const to = document.getElementById('to').value
            $.ajax({
                url: '/admin/dashboard/create-report',
                data: {
                    format,
                    totalRevenue,
                    averageOrderValue,
                    monthlyEarnings,
                    totalOrders,
                    numberOfProducts,
                    from,
                    to
                },
                method: 'POST',
                xhrFields: {
                    responseType: 'blob' // set the response type to blob
                },
                success: function (response, status, xhr) {
                    const contentType = xhr.getResponseHeader('Content-Type')
                    const fileExtension = contentType === 'application/pdf' ? 'pdf' : 'xlsx'
                    const fileName = `sales-report.${fileExtension}`
                    const blob = new Blob([response], { type: contentType })

                    if (contentType === 'application/pdf') {
                        // Confirm if user wants to open PDF file in new window
                        Swal.fire({
                            title: 'Do you want to download the PDF file?',
                            icon: 'question',
                            showCancelButton: true,
                            confirmButtonText: '<i class="fas fa-download"></i> Download',
                            cancelButtonText: 'Cancel',
                        }).then((result) => {
                            if (result.isConfirmed) {
                                const fileURL = URL.createObjectURL(blob)
                                const a = document.createElement('a')
                                a.href = fileURL
                                a.download = 'file.pdf'
                                document.body.appendChild(a)
                                a.click()
                                document.body.removeChild(a)
                            }
                        })
                    } else if (contentType === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') {
                        // Confirm if user wants to download Excel file
                        Swal.fire({
                            title: 'Do you want to download the Excel file?',
                            icon: 'question',
                            showCancelButton: true,
                            confirmButtonText: '<i class="fas fa-download"></i> Download',
                            cancelButtonText: 'Cancel'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                const link = document.createElement('a')
                                link.href = window.URL.createObjectURL(blob)
                                link.download = fileName
                                link.click()
                            }
                        })
                    } else {
                        Swal.fire({
                            title: 'Download failed please try again later..!',
                            icon: 'question',
                            showCancelButton: true,
                            confirmButtonText: 'Try again',
                            cancelButtonText: 'ok'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                location.href = '/admin/create-report'
                            }
                        })
                        // Unsupported file type
                        console.error('Unsupported file type:', contentType)
                    }
                }, error: function (xhr, status, error) {

                }
            })
        }


    </script>